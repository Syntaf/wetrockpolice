name: Test

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  test:
    runs-on: ubuntu-latest
    environment: test
    services:
      db:
        image: postgres:11
        env:
          POSTGRES_USER: wrp
          POSTGRES_PASSWORD: dev
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '2.6'

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 10.13.0

      - name: Configure Cache Locations
        id: cache-locations
        run: |
          echo "yarn_dir=$(yarn cache dir)" >> $GITHUB_OUTPUT
          echo "ruby_dir=vendor/bundle" >> $GITHUB_OUTPUT

      - name: Configure Javascript Cache
        id: cache-yarn
        uses: actions/cache@v3
        with:
          path: ${{ steps.cache-locations.outputs.yarn_dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Configure Ruby Cache
        id: cache-gems
        uses: actions/cache@v3
        with:
          path: ${{ steps.cache-locations.outputs.ruby_dir }}
          key: ${{ runner.os }}-gem-${{ hashFiles('**/Gemfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-gem-

      - name: Bundle Install
        if: steps.cache-gems.outputs.cache-hit != 'true'
        run: |
          gem install bundler
          bundle config path ${{ steps.cache-locations.outputs.ruby_dir }}
          bundle config --local build.sassc --disable-march-tune-native
          bundle install --jobs 4 --retry 3

      - name: Install packages
        if: steps.cache-yarn.outputs.cache-hit != 'true'
        run: |
          yarn install --pure-lockfile

      - name: Create Database
        env:
          POSTGRES_TEST_DB: wetrockpolice_test
          POSTGRES_USER: wrp
          POSTGRES_PASSWORD: dev
          POSTGRES_HOST: localhost
          RAILS_ENV: test
          RAILS_MASTER_KEY: ${{ secrets.RAILS_MASTER_KEY }}
        run: |
          bundle exec rake db:create
          bundle exec rake db:migrate

      - name: Run Tests
        env:
          POSTGRES_TEST_DB: wetrockpolice_test
          POSTGRES_USER: wrp
          POSTGRES_PASSWORD: dev
          POSTGRES_HOST: localhost
          RAILS_ENV: test
          RAILS_MASTER_KEY: ${{ secrets.RAILS_MASTER_KEY }}
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
        run: |
          bundle exec rails test
